# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: domainservice.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='domainservice.proto',
  package='domainmessages',
  syntax='proto3',
  serialized_pb=_b('\n\x13\x64omainservice.proto\x12\x0e\x64omainmessages\"F\n\x15SuspendDomainsRequest\x12\x11\n\tdomainids\x18\x01 \x03(\t\x12\x0c\n\x04note\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\"\'\n\x16SuspendDomainsResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\"H\n\x17UnSuspendDomainsRequest\x12\x11\n\tdomainids\x18\x01 \x03(\t\x12\x0c\n\x04note\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\")\n\x18UnSuspendDomainsResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\"#\n\x11\x44omainInfoRequest\x12\x0e\n\x06\x64omain\x18\x01 \x01(\t\"m\n\x12\x44omainInfoResponse\x12\x0e\n\x06\x64omain\x18\x01 \x01(\t\x12\x11\n\tshopperId\x18\x02 \x01(\t\x12\x10\n\x08\x64omainId\x18\x03 \x01(\x05\x12\x12\n\ncreateDate\x18\x04 \x01(\t\x12\x0e\n\x06status\x18\x05 \x01(\t2\xac\x02\n\rDomainService\x12_\n\x0eSuspendDomains\x12%.domainmessages.SuspendDomainsRequest\x1a&.domainmessages.SuspendDomainsResponse\x12\x65\n\x10UnSuspendDomains\x12\'.domainmessages.UnSuspendDomainsRequest\x1a(.domainmessages.UnSuspendDomainsResponse\x12S\n\nDomainInfo\x12!.domainmessages.DomainInfoRequest\x1a\".domainmessages.DomainInfoResponseB\x04Z\x02pbb\x06proto3')
)




_SUSPENDDOMAINSREQUEST = _descriptor.Descriptor(
  name='SuspendDomainsRequest',
  full_name='domainmessages.SuspendDomainsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='domainids', full_name='domainmessages.SuspendDomainsRequest.domainids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='note', full_name='domainmessages.SuspendDomainsRequest.note', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user', full_name='domainmessages.SuspendDomainsRequest.user', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=109,
)


_SUSPENDDOMAINSRESPONSE = _descriptor.Descriptor(
  name='SuspendDomainsResponse',
  full_name='domainmessages.SuspendDomainsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='domainmessages.SuspendDomainsResponse.count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=150,
)


_UNSUSPENDDOMAINSREQUEST = _descriptor.Descriptor(
  name='UnSuspendDomainsRequest',
  full_name='domainmessages.UnSuspendDomainsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='domainids', full_name='domainmessages.UnSuspendDomainsRequest.domainids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='note', full_name='domainmessages.UnSuspendDomainsRequest.note', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user', full_name='domainmessages.UnSuspendDomainsRequest.user', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=152,
  serialized_end=224,
)


_UNSUSPENDDOMAINSRESPONSE = _descriptor.Descriptor(
  name='UnSuspendDomainsResponse',
  full_name='domainmessages.UnSuspendDomainsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='domainmessages.UnSuspendDomainsResponse.count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=226,
  serialized_end=267,
)


_DOMAININFOREQUEST = _descriptor.Descriptor(
  name='DomainInfoRequest',
  full_name='domainmessages.DomainInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='domain', full_name='domainmessages.DomainInfoRequest.domain', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=269,
  serialized_end=304,
)


_DOMAININFORESPONSE = _descriptor.Descriptor(
  name='DomainInfoResponse',
  full_name='domainmessages.DomainInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='domain', full_name='domainmessages.DomainInfoResponse.domain', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shopperId', full_name='domainmessages.DomainInfoResponse.shopperId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='domainId', full_name='domainmessages.DomainInfoResponse.domainId', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='createDate', full_name='domainmessages.DomainInfoResponse.createDate', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='domainmessages.DomainInfoResponse.status', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=306,
  serialized_end=415,
)

DESCRIPTOR.message_types_by_name['SuspendDomainsRequest'] = _SUSPENDDOMAINSREQUEST
DESCRIPTOR.message_types_by_name['SuspendDomainsResponse'] = _SUSPENDDOMAINSRESPONSE
DESCRIPTOR.message_types_by_name['UnSuspendDomainsRequest'] = _UNSUSPENDDOMAINSREQUEST
DESCRIPTOR.message_types_by_name['UnSuspendDomainsResponse'] = _UNSUSPENDDOMAINSRESPONSE
DESCRIPTOR.message_types_by_name['DomainInfoRequest'] = _DOMAININFOREQUEST
DESCRIPTOR.message_types_by_name['DomainInfoResponse'] = _DOMAININFORESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SuspendDomainsRequest = _reflection.GeneratedProtocolMessageType('SuspendDomainsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SUSPENDDOMAINSREQUEST,
  __module__ = 'domainservice_pb2'
  # @@protoc_insertion_point(class_scope:domainmessages.SuspendDomainsRequest)
  ))
_sym_db.RegisterMessage(SuspendDomainsRequest)

SuspendDomainsResponse = _reflection.GeneratedProtocolMessageType('SuspendDomainsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SUSPENDDOMAINSRESPONSE,
  __module__ = 'domainservice_pb2'
  # @@protoc_insertion_point(class_scope:domainmessages.SuspendDomainsResponse)
  ))
_sym_db.RegisterMessage(SuspendDomainsResponse)

UnSuspendDomainsRequest = _reflection.GeneratedProtocolMessageType('UnSuspendDomainsRequest', (_message.Message,), dict(
  DESCRIPTOR = _UNSUSPENDDOMAINSREQUEST,
  __module__ = 'domainservice_pb2'
  # @@protoc_insertion_point(class_scope:domainmessages.UnSuspendDomainsRequest)
  ))
_sym_db.RegisterMessage(UnSuspendDomainsRequest)

UnSuspendDomainsResponse = _reflection.GeneratedProtocolMessageType('UnSuspendDomainsResponse', (_message.Message,), dict(
  DESCRIPTOR = _UNSUSPENDDOMAINSRESPONSE,
  __module__ = 'domainservice_pb2'
  # @@protoc_insertion_point(class_scope:domainmessages.UnSuspendDomainsResponse)
  ))
_sym_db.RegisterMessage(UnSuspendDomainsResponse)

DomainInfoRequest = _reflection.GeneratedProtocolMessageType('DomainInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _DOMAININFOREQUEST,
  __module__ = 'domainservice_pb2'
  # @@protoc_insertion_point(class_scope:domainmessages.DomainInfoRequest)
  ))
_sym_db.RegisterMessage(DomainInfoRequest)

DomainInfoResponse = _reflection.GeneratedProtocolMessageType('DomainInfoResponse', (_message.Message,), dict(
  DESCRIPTOR = _DOMAININFORESPONSE,
  __module__ = 'domainservice_pb2'
  # @@protoc_insertion_point(class_scope:domainmessages.DomainInfoResponse)
  ))
_sym_db.RegisterMessage(DomainInfoResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\002pb'))

_DOMAINSERVICE = _descriptor.ServiceDescriptor(
  name='DomainService',
  full_name='domainmessages.DomainService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=418,
  serialized_end=718,
  methods=[
  _descriptor.MethodDescriptor(
    name='SuspendDomains',
    full_name='domainmessages.DomainService.SuspendDomains',
    index=0,
    containing_service=None,
    input_type=_SUSPENDDOMAINSREQUEST,
    output_type=_SUSPENDDOMAINSRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UnSuspendDomains',
    full_name='domainmessages.DomainService.UnSuspendDomains',
    index=1,
    containing_service=None,
    input_type=_UNSUSPENDDOMAINSREQUEST,
    output_type=_UNSUSPENDDOMAINSRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DomainInfo',
    full_name='domainmessages.DomainService.DomainInfo',
    index=2,
    containing_service=None,
    input_type=_DOMAININFOREQUEST,
    output_type=_DOMAININFORESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DOMAINSERVICE)

DESCRIPTOR.services_by_name['DomainService'] = _DOMAINSERVICE

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class DomainServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.SuspendDomains = channel.unary_unary(
          '/domainmessages.DomainService/SuspendDomains',
          request_serializer=SuspendDomainsRequest.SerializeToString,
          response_deserializer=SuspendDomainsResponse.FromString,
          )
      self.UnSuspendDomains = channel.unary_unary(
          '/domainmessages.DomainService/UnSuspendDomains',
          request_serializer=UnSuspendDomainsRequest.SerializeToString,
          response_deserializer=UnSuspendDomainsResponse.FromString,
          )
      self.DomainInfo = channel.unary_unary(
          '/domainmessages.DomainService/DomainInfo',
          request_serializer=DomainInfoRequest.SerializeToString,
          response_deserializer=DomainInfoResponse.FromString,
          )


  class DomainServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def SuspendDomains(self, request, context):
      """Adds an abuse lock for a domain
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnSuspendDomains(self, request, context):
      """Removes an abuse lock for a domain
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DomainInfo(self, request, context):
      """Gathers information about a given domain
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_DomainServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SuspendDomains': grpc.unary_unary_rpc_method_handler(
            servicer.SuspendDomains,
            request_deserializer=SuspendDomainsRequest.FromString,
            response_serializer=SuspendDomainsResponse.SerializeToString,
        ),
        'UnSuspendDomains': grpc.unary_unary_rpc_method_handler(
            servicer.UnSuspendDomains,
            request_deserializer=UnSuspendDomainsRequest.FromString,
            response_serializer=UnSuspendDomainsResponse.SerializeToString,
        ),
        'DomainInfo': grpc.unary_unary_rpc_method_handler(
            servicer.DomainInfo,
            request_deserializer=DomainInfoRequest.FromString,
            response_serializer=DomainInfoResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'domainmessages.DomainService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaDomainServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def SuspendDomains(self, request, context):
      """Adds an abuse lock for a domain
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnSuspendDomains(self, request, context):
      """Removes an abuse lock for a domain
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DomainInfo(self, request, context):
      """Gathers information about a given domain
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaDomainServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def SuspendDomains(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Adds an abuse lock for a domain
      """
      raise NotImplementedError()
    SuspendDomains.future = None
    def UnSuspendDomains(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Removes an abuse lock for a domain
      """
      raise NotImplementedError()
    UnSuspendDomains.future = None
    def DomainInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Gathers information about a given domain
      """
      raise NotImplementedError()
    DomainInfo.future = None


  def beta_create_DomainService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('domainmessages.DomainService', 'DomainInfo'): DomainInfoRequest.FromString,
      ('domainmessages.DomainService', 'SuspendDomains'): SuspendDomainsRequest.FromString,
      ('domainmessages.DomainService', 'UnSuspendDomains'): UnSuspendDomainsRequest.FromString,
    }
    response_serializers = {
      ('domainmessages.DomainService', 'DomainInfo'): DomainInfoResponse.SerializeToString,
      ('domainmessages.DomainService', 'SuspendDomains'): SuspendDomainsResponse.SerializeToString,
      ('domainmessages.DomainService', 'UnSuspendDomains'): UnSuspendDomainsResponse.SerializeToString,
    }
    method_implementations = {
      ('domainmessages.DomainService', 'DomainInfo'): face_utilities.unary_unary_inline(servicer.DomainInfo),
      ('domainmessages.DomainService', 'SuspendDomains'): face_utilities.unary_unary_inline(servicer.SuspendDomains),
      ('domainmessages.DomainService', 'UnSuspendDomains'): face_utilities.unary_unary_inline(servicer.UnSuspendDomains),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_DomainService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('domainmessages.DomainService', 'DomainInfo'): DomainInfoRequest.SerializeToString,
      ('domainmessages.DomainService', 'SuspendDomains'): SuspendDomainsRequest.SerializeToString,
      ('domainmessages.DomainService', 'UnSuspendDomains'): UnSuspendDomainsRequest.SerializeToString,
    }
    response_deserializers = {
      ('domainmessages.DomainService', 'DomainInfo'): DomainInfoResponse.FromString,
      ('domainmessages.DomainService', 'SuspendDomains'): SuspendDomainsResponse.FromString,
      ('domainmessages.DomainService', 'UnSuspendDomains'): UnSuspendDomainsResponse.FromString,
    }
    cardinalities = {
      'DomainInfo': cardinality.Cardinality.UNARY_UNARY,
      'SuspendDomains': cardinality.Cardinality.UNARY_UNARY,
      'UnSuspendDomains': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'domainmessages.DomainService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
